name: firecrawl
x-common-service:
  build: apps/api
  ulimits: &ref_0
    nofile:
      soft: 65535
      hard: 65535
  networks: &ref_1
    - backend
    - dokploy-network
  extra_hosts: &ref_2
    - host.docker.internal:host-gateway
services:
  playwright-service:
    build: apps/playwright-service
    environment:
      - PORT=3000
      - PROXY_SERVER=${PROXY_SERVER}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - BLOCK_MEDIA=${BLOCK_MEDIA}
    networks:
      - backend
  api:
    build: apps/api
    ulimits: *ref_0
    networks: *ref_1
    extra_hosts: *ref_2
    labels:
      - traefik.enable=true
      - traefik.http.routers.firecrawl-api-guahua-22-web.rule=Host(`crawl.flbrt.it`) && (HeaderRegexp(`Authorization`, `Baerer ${API_TOKEN}`) || HeaderRegexp(`Authorization`, `'Baerer ${API_TOKEN}'`))
      - traefik.http.routers.firecrawl-api-guahua-22-web.entrypoints=web
      - traefik.http.services.firecrawl-api-guahua-22-web.loadbalancer.server.port=3002
      - traefik.http.routers.firecrawl-api-guahua-22-web.service=firecrawl-api-guahua-22-web
      - traefik.http.routers.firecrawl-api-guahua-22-web.middlewares=redirect-to-https@file
      - traefik.http.routers.firecrawl-api-guahua-22-websecure.rule=Host(`crawl.flbrt.it`) && (HeaderRegexp(`Authorization`, `Baerer ${API_TOKEN}`) || HeaderRegexp(`Authorization`, `'Baerer ${API_TOKEN}'`))
      - traefik.http.routers.firecrawl-api-guahua-22-websecure.entrypoints=websecure
      - traefik.http.services.firecrawl-api-guahua-22-websecure.loadbalancer.server.port=3002
      - traefik.http.routers.firecrawl-api-guahua-22-websecure.service=firecrawl-api-guahua-22-websecure
      - traefik.http.routers.firecrawl-api-guahua-22-websecure.tls.certresolver=letsencrypt
      - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.testheader.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.testheader.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.testheader.headers.addvaryheader=true"
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      REDIS_RATE_LIMIT_URL: ${REDIS_URL:-redis://redis:6379}
      PLAYWRIGHT_MICROSERVICE_URL: ${PLAYWRIGHT_MICROSERVICE_URL:-http://playwright-service:3000}
      USE_DB_AUTHENTICATION: ${USE_DB_AUTHENTICATION}
      PORT: ${PORT:-3002}
      NUM_WORKERS_PER_QUEUE: ${NUM_WORKERS_PER_QUEUE}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      MODEL_NAME: ${MODEL_NAME:-gpt-4o}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      LLAMAPARSE_API_KEY: ${LLAMAPARSE_API_KEY}
      LOGTAIL_KEY: ${LOGTAIL_KEY}
      BULL_AUTH_KEY: ${BULL_AUTH_KEY}
      TEST_API_KEY: ${TEST_API_KEY}
      POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      POSTHOG_HOST: ${POSTHOG_HOST}
      SUPABASE_ANON_TOKEN: ${SUPABASE_ANON_TOKEN}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_TOKEN: ${SUPABASE_SERVICE_TOKEN}
      SCRAPING_BEE_API_KEY: ${SCRAPING_BEE_API_KEY}
      HOST: ${HOST:-0.0.0.0}
      SELF_HOSTED_WEBHOOK_URL: ${SELF_HOSTED_WEBHOOK_URL}
      LOGGING_LEVEL: ${LOGGING_LEVEL}
      FLY_PROCESS_GROUP: app
    depends_on:
      - redis
      - playwright-service
    ports:
      - '3002:3002'
    command:
      - pnpm
      - run
      - start:production
  worker:
    build: apps/api
    ulimits: *ref_0
    networks: *ref_1
    extra_hosts: *ref_2
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      REDIS_RATE_LIMIT_URL: ${REDIS_URL:-redis://redis:6379}
      PLAYWRIGHT_MICROSERVICE_URL: ${PLAYWRIGHT_MICROSERVICE_URL:-http://playwright-service:3000}
      USE_DB_AUTHENTICATION: ${USE_DB_AUTHENTICATION}
      PORT: ${PORT:-3002}
      NUM_WORKERS_PER_QUEUE: ${NUM_WORKERS_PER_QUEUE}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      MODEL_NAME: ${MODEL_NAME:-gpt-4o}
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL}
      LLAMAPARSE_API_KEY: ${LLAMAPARSE_API_KEY}
      LOGTAIL_KEY: ${LOGTAIL_KEY}
      BULL_AUTH_KEY: ${BULL_AUTH_KEY}
      TEST_API_KEY: ${TEST_API_KEY}
      POSTHOG_API_KEY: ${POSTHOG_API_KEY}
      POSTHOG_HOST: ${POSTHOG_HOST}
      SUPABASE_ANON_TOKEN: ${SUPABASE_ANON_TOKEN}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_TOKEN: ${SUPABASE_SERVICE_TOKEN}
      SCRAPING_BEE_API_KEY: ${SCRAPING_BEE_API_KEY}
      HOST: ${HOST:-0.0.0.0}
      SELF_HOSTED_WEBHOOK_URL: ${SELF_HOSTED_WEBHOOK_URL}
      LOGGING_LEVEL: ${LOGGING_LEVEL}
      FLY_PROCESS_GROUP: worker
    depends_on:
      - redis
      - playwright-service
      - api
    command:
      - pnpm
      - run
      - workers
  redis:
    image: redis:alpine
    networks:
      - backend
    command: redis-server --bind 0.0.0.0
networks:
  backend:
    driver: bridge
  dokploy-network:
    external: true
